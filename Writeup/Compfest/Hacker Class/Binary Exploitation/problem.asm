
problem:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <__isoc99_fscanf@plt-0x3ab>
  400248:	78 38                	js     400282 <__isoc99_fscanf@plt-0x39e>
  40024a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 02                	add    BYTE PTR [rdx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 06                	add    BYTE PTR [rsi],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 20                	add    BYTE PTR [rax],ah
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 a1 f9 2a 50 ea    	add    BYTE PTR [rcx-0x15afd507],ah
  400289:	59                   	pop    rcx
  40028a:	86 e8                	xchg   al,ch
  40028c:	fe                   	(bad)  
  40028d:	27                   	(bad)  
  40028e:	b7 6f                	mov    bh,0x6f
  400290:	47 f9                	rex.RXB stc 
  400292:	74 f6                	je     40028a <__isoc99_fscanf@plt-0x396>
  400294:	f1                   	int1   
  400295:	89                   	.byte 0x89
  400296:	87 36                	xchg   DWORD PTR [rsi],esi

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	02 00                	add    al,BYTE PTR [rax]
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	0b 00                	or     eax,DWORD PTR [rax]
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
  4002a2:	00 00                	add    BYTE PTR [rax],al
  4002a4:	06                   	(bad)  
  4002a5:	00 00                	add    BYTE PTR [rax],al
  4002a7:	00 00                	add    BYTE PTR [rax],al
  4002a9:	00 20                	add    BYTE PTR [rax],ah
  4002ab:	00 80 01 10 00 0b    	add    BYTE PTR [rax+0xb001001],al
  4002b1:	00 00                	add    BYTE PTR [rax],al
  4002b3:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
  4002b6:	00 00                	add    BYTE PTR [rax],al
  4002b8:	29 1d 8c 1c 67 55    	sub    DWORD PTR [rip+0x55671c8c],ebx        # 55a71f4a <stdin@GLIBC_2.2.5+0x55470eca>
  4002be:	61                   	(bad)  
  4002bf:	10                   	.byte 0x10

Disassembly of section .dynsym:

00000000004002c0 <.dynsym>:
	...
  4002d8:	2e 00 00             	cs add BYTE PTR [rax],al
  4002db:	00 12                	add    BYTE PTR [rdx],dl
	...
  4002ed:	00 00                	add    BYTE PTR [rax],al
  4002ef:	00 16                	add    BYTE PTR [rsi],dl
  4002f1:	00 00                	add    BYTE PTR [rax],al
  4002f3:	00 12                	add    BYTE PTR [rdx],dl
	...
  400305:	00 00                	add    BYTE PTR [rax],al
  400307:	00 54 00 00          	add    BYTE PTR [rax+rax*1+0x0],dl
  40030b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40031d:	00 00                	add    BYTE PTR [rax],al
  40031f:	00 21                	add    BYTE PTR [rcx],ah
  400321:	00 00                	add    BYTE PTR [rax],al
  400323:	00 12                	add    BYTE PTR [rdx],dl
	...
  400335:	00 00                	add    BYTE PTR [rax],al
  400337:	00 4d 00             	add    BYTE PTR [rbp+0x0],cl
  40033a:	00 00                	add    BYTE PTR [rax],al
  40033c:	12 00                	adc    al,BYTE PTR [rax]
	...
  40034e:	00 00                	add    BYTE PTR [rax],al
  400350:	66 00 00             	data16 add BYTE PTR [rax],al
  400353:	00 20                	add    BYTE PTR [rax],ah
	...
  400365:	00 00                	add    BYTE PTR [rax],al
  400367:	00 3e                	add    BYTE PTR [rsi],bh
  400369:	00 00                	add    BYTE PTR [rax],al
  40036b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40037d:	00 00                	add    BYTE PTR [rax],al
  40037f:	00 45 00             	add    BYTE PTR [rbp+0x0],al
  400382:	00 00                	add    BYTE PTR [rax],al
  400384:	12 00                	adc    al,BYTE PTR [rax]
	...
  400396:	00 00                	add    BYTE PTR [rax],al
  400398:	10 00                	adc    BYTE PTR [rax],al
  40039a:	00 00                	add    BYTE PTR [rax],al
  40039c:	12 00                	adc    al,BYTE PTR [rax]
	...
  4003ae:	00 00                	add    BYTE PTR [rax],al
  4003b0:	0b 00                	or     eax,DWORD PTR [rax]
  4003b2:	00 00                	add    BYTE PTR [rax],al
  4003b4:	12 00                	adc    al,BYTE PTR [rax]
	...
  4003c6:	00 00                	add    BYTE PTR [rax],al
  4003c8:	27                   	(bad)  
  4003c9:	00 00                	add    BYTE PTR [rax],al
  4003cb:	00 11                	add    BYTE PTR [rcx],dl
  4003cd:	00 1a                	add    BYTE PTR [rdx],bl
  4003cf:	00 70 10             	add    BYTE PTR [rax+0x10],dh
  4003d2:	60                   	(bad)  
  4003d3:	00 00                	add    BYTE PTR [rax],al
  4003d5:	00 00                	add    BYTE PTR [rax],al
  4003d7:	00 08                	add    BYTE PTR [rax],cl
  4003d9:	00 00                	add    BYTE PTR [rax],al
  4003db:	00 00                	add    BYTE PTR [rax],al
  4003dd:	00 00                	add    BYTE PTR [rax],al
  4003df:	00 1b                	add    BYTE PTR [rbx],bl
  4003e1:	00 00                	add    BYTE PTR [rax],al
  4003e3:	00 11                	add    BYTE PTR [rcx],dl
  4003e5:	00 1a                	add    BYTE PTR [rdx],bl
  4003e7:	00 80 10 60 00 00    	add    BYTE PTR [rax+0x6010],al
  4003ed:	00 00                	add    BYTE PTR [rax],al
  4003ef:	00 08                	add    BYTE PTR [rax],cl
  4003f1:	00 00                	add    BYTE PTR [rax],al
  4003f3:	00 00                	add    BYTE PTR [rax],al
  4003f5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

00000000004003f8 <.dynstr>:
  4003f8:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  4003fc:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  4003fe:	73 6f                	jae    40046f <__isoc99_fscanf@plt-0x1b1>
  400400:	2e 36 00 65 78       	cs ss add BYTE PTR [rbp+0x78],ah
  400405:	69 74 00 66 6f 70 65 	imul   esi,DWORD PTR [rax+rax*1+0x66],0x6e65706f
  40040c:	6e 
  40040d:	00 70 75             	add    BYTE PTR [rax+0x75],dh
  400410:	74 73                	je     400485 <__isoc99_fscanf@plt-0x19b>
  400412:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
  400415:	64 69 6e 00 66 67 65 	imul   ebp,DWORD PTR fs:[rsi+0x0],0x74656766
  40041c:	74 
  40041d:	73 00                	jae    40041f <__isoc99_fscanf@plt-0x201>
  40041f:	73 74                	jae    400495 <__isoc99_fscanf@plt-0x18b>
  400421:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
  400423:	75 74                	jne    400499 <__isoc99_fscanf@plt-0x187>
  400425:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  400428:	69 73 6f 63 39 39 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f393963
  40042f:	66 73 63             	data16 jae 400495 <__isoc99_fscanf@plt-0x18b>
  400432:	61                   	(bad)  
  400433:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400434:	66 00 6d 61          	data16 add BYTE PTR [rbp+0x61],ch
  400438:	6c                   	ins    BYTE PTR es:[rdi],dx
  400439:	6c                   	ins    BYTE PTR es:[rdi],dx
  40043a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40043b:	63 00                	movsxd eax,DWORD PTR [rax]
  40043d:	73 65                	jae    4004a4 <__isoc99_fscanf@plt-0x17c>
  40043f:	74 76                	je     4004b7 <__isoc99_fscanf@plt-0x169>
  400441:	62 75 66 00 73       	(bad)
  400446:	74 72                	je     4004ba <__isoc99_fscanf@plt-0x166>
  400448:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
  40044b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  40044e:	6c                   	ins    BYTE PTR es:[rdi],dx
  40044f:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  400456:	72 74                	jb     4004cc <__isoc99_fscanf@plt-0x154>
  400458:	5f                   	pop    rdi
  400459:	6d                   	ins    DWORD PTR es:[rdi],dx
  40045a:	61                   	(bad)  
  40045b:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [rsi+0x0],0x6d675f5f
  400462:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400463:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400464:	5f                   	pop    rdi
  400465:	73 74                	jae    4004db <__isoc99_fscanf@plt-0x145>
  400467:	61                   	(bad)  
  400468:	72 74                	jb     4004de <__isoc99_fscanf@plt-0x142>
  40046a:	5f                   	pop    rdi
  40046b:	5f                   	pop    rdi
  40046c:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  40046f:	49                   	rex.WB
  400470:	42                   	rex.X
  400471:	43 5f                	rex.XB pop r15
  400473:	32 2e                	xor    ch,BYTE PTR [rsi]
  400475:	37                   	(bad)  
  400476:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  400479:	49                   	rex.WB
  40047a:	42                   	rex.X
  40047b:	43 5f                	rex.XB pop r15
  40047d:	32 2e                	xor    ch,BYTE PTR [rsi]
  40047f:	32 2e                	xor    ch,BYTE PTR [rsi]
  400481:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400484 <.gnu.version>:
  400484:	00 00                	add    BYTE PTR [rax],al
  400486:	03 00                	add    eax,DWORD PTR [rax]
  400488:	02 00                	add    al,BYTE PTR [rax]
  40048a:	02 00                	add    al,BYTE PTR [rax]
  40048c:	02 00                	add    al,BYTE PTR [rax]
  40048e:	02 00                	add    al,BYTE PTR [rax]
  400490:	00 00                	add    BYTE PTR [rax],al
  400492:	02 00                	add    al,BYTE PTR [rax]
  400494:	02 00                	add    al,BYTE PTR [rax]
  400496:	02 00                	add    al,BYTE PTR [rax]
  400498:	02 00                	add    al,BYTE PTR [rax]
  40049a:	02 00                	add    al,BYTE PTR [rax]
  40049c:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .gnu.version_r:

00000000004004a0 <.gnu.version_r>:
  4004a0:	01 00                	add    DWORD PTR [rax],eax
  4004a2:	02 00                	add    al,BYTE PTR [rax]
  4004a4:	01 00                	add    DWORD PTR [rax],eax
  4004a6:	00 00                	add    BYTE PTR [rax],al
  4004a8:	10 00                	adc    BYTE PTR [rax],al
  4004aa:	00 00                	add    BYTE PTR [rax],al
  4004ac:	00 00                	add    BYTE PTR [rax],al
  4004ae:	00 00                	add    BYTE PTR [rax],al
  4004b0:	17                   	(bad)  
  4004b1:	69 69 0d 00 00 03 00 	imul   ebp,DWORD PTR [rcx+0xd],0x30000
  4004b8:	75 00                	jne    4004ba <__isoc99_fscanf@plt-0x166>
  4004ba:	00 00                	add    BYTE PTR [rax],al
  4004bc:	10 00                	adc    BYTE PTR [rax],al
  4004be:	00 00                	add    BYTE PTR [rax],al
  4004c0:	75 1a                	jne    4004dc <__isoc99_fscanf@plt-0x144>
  4004c2:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  4004c8:	7f 00                	jg     4004ca <__isoc99_fscanf@plt-0x156>
  4004ca:	00 00                	add    BYTE PTR [rax],al
  4004cc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000004004d0 <.rela.dyn>:
  4004d0:	f8                   	clc    
  4004d1:	0f 60 00             	punpcklbw mm0,DWORD PTR [rax]
  4004d4:	00 00                	add    BYTE PTR [rax],al
  4004d6:	00 00                	add    BYTE PTR [rax],al
  4004d8:	06                   	(bad)  
  4004d9:	00 00                	add    BYTE PTR [rax],al
  4004db:	00 06                	add    BYTE PTR [rsi],al
	...
  4004e5:	00 00                	add    BYTE PTR [rax],al
  4004e7:	00 70 10             	add    BYTE PTR [rax+0x10],dh
  4004ea:	60                   	(bad)  
  4004eb:	00 00                	add    BYTE PTR [rax],al
  4004ed:	00 00                	add    BYTE PTR [rax],al
  4004ef:	00 05 00 00 00 0b    	add    BYTE PTR [rip+0xb000000],al        # b4004f5 <stdin@GLIBC_2.2.5+0xadff475>
	...
  4004fd:	00 00                	add    BYTE PTR [rax],al
  4004ff:	00 80 10 60 00 00    	add    BYTE PTR [rax+0x6010],al
  400505:	00 00                	add    BYTE PTR [rax],al
  400507:	00 05 00 00 00 0c    	add    BYTE PTR [rip+0xc000000],al        # c40050d <stdin@GLIBC_2.2.5+0xbdff48d>
	...

Disassembly of section .rela.plt:

0000000000400518 <.rela.plt>:
  400518:	18 10                	sbb    BYTE PTR [rax],dl
  40051a:	60                   	(bad)  
  40051b:	00 00                	add    BYTE PTR [rax],al
  40051d:	00 00                	add    BYTE PTR [rax],al
  40051f:	00 07                	add    BYTE PTR [rdi],al
  400521:	00 00                	add    BYTE PTR [rax],al
  400523:	00 01                	add    BYTE PTR [rcx],al
	...
  40052d:	00 00                	add    BYTE PTR [rax],al
  40052f:	00 20                	add    BYTE PTR [rax],ah
  400531:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  400534:	00 00                	add    BYTE PTR [rax],al
  400536:	00 00                	add    BYTE PTR [rax],al
  400538:	07                   	(bad)  
  400539:	00 00                	add    BYTE PTR [rax],al
  40053b:	00 02                	add    BYTE PTR [rdx],al
	...
  400545:	00 00                	add    BYTE PTR [rax],al
  400547:	00 28                	add    BYTE PTR [rax],ch
  400549:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  40054c:	00 00                	add    BYTE PTR [rax],al
  40054e:	00 00                	add    BYTE PTR [rax],al
  400550:	07                   	(bad)  
  400551:	00 00                	add    BYTE PTR [rax],al
  400553:	00 03                	add    BYTE PTR [rbx],al
	...
  40055d:	00 00                	add    BYTE PTR [rax],al
  40055f:	00 30                	add    BYTE PTR [rax],dh
  400561:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  400564:	00 00                	add    BYTE PTR [rax],al
  400566:	00 00                	add    BYTE PTR [rax],al
  400568:	07                   	(bad)  
  400569:	00 00                	add    BYTE PTR [rax],al
  40056b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
  400576:	00 00                	add    BYTE PTR [rax],al
  400578:	38 10                	cmp    BYTE PTR [rax],dl
  40057a:	60                   	(bad)  
  40057b:	00 00                	add    BYTE PTR [rax],al
  40057d:	00 00                	add    BYTE PTR [rax],al
  40057f:	00 07                	add    BYTE PTR [rdi],al
  400581:	00 00                	add    BYTE PTR [rax],al
  400583:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 400589 <__isoc99_fscanf@plt-0x97>
  400589:	00 00                	add    BYTE PTR [rax],al
  40058b:	00 00                	add    BYTE PTR [rax],al
  40058d:	00 00                	add    BYTE PTR [rax],al
  40058f:	00 40 10             	add    BYTE PTR [rax+0x10],al
  400592:	60                   	(bad)  
  400593:	00 00                	add    BYTE PTR [rax],al
  400595:	00 00                	add    BYTE PTR [rax],al
  400597:	00 07                	add    BYTE PTR [rdi],al
  400599:	00 00                	add    BYTE PTR [rax],al
  40059b:	00 07                	add    BYTE PTR [rdi],al
	...
  4005a5:	00 00                	add    BYTE PTR [rax],al
  4005a7:	00 48 10             	add    BYTE PTR [rax+0x10],cl
  4005aa:	60                   	(bad)  
  4005ab:	00 00                	add    BYTE PTR [rax],al
  4005ad:	00 00                	add    BYTE PTR [rax],al
  4005af:	00 07                	add    BYTE PTR [rdi],al
  4005b1:	00 00                	add    BYTE PTR [rax],al
  4005b3:	00 08                	add    BYTE PTR [rax],cl
	...
  4005bd:	00 00                	add    BYTE PTR [rax],al
  4005bf:	00 50 10             	add    BYTE PTR [rax+0x10],dl
  4005c2:	60                   	(bad)  
  4005c3:	00 00                	add    BYTE PTR [rax],al
  4005c5:	00 00                	add    BYTE PTR [rax],al
  4005c7:	00 07                	add    BYTE PTR [rdi],al
  4005c9:	00 00                	add    BYTE PTR [rax],al
  4005cb:	00 09                	add    BYTE PTR [rcx],cl
	...
  4005d5:	00 00                	add    BYTE PTR [rax],al
  4005d7:	00 58 10             	add    BYTE PTR [rax+0x10],bl
  4005da:	60                   	(bad)  
  4005db:	00 00                	add    BYTE PTR [rax],al
  4005dd:	00 00                	add    BYTE PTR [rax],al
  4005df:	00 07                	add    BYTE PTR [rdi],al
  4005e1:	00 00                	add    BYTE PTR [rax],al
  4005e3:	00 0a                	add    BYTE PTR [rdx],cl
	...

Disassembly of section .init:

00000000004005f0 <.init>:
  4005f0:	48 83 ec 08          	sub    rsp,0x8
  4005f4:	48 8b 05 fd 09 20 00 	mov    rax,QWORD PTR [rip+0x2009fd]        # 600ff8 <__gmon_start__@plt+0x200948>
  4005fb:	48 85 c0             	test   rax,rax
  4005fe:	74 05                	je     400605 <__isoc99_fscanf@plt-0x1b>
  400600:	e8 ab 00 00 00       	call   4006b0 <__gmon_start__@plt>
  400605:	48 83 c4 08          	add    rsp,0x8
  400609:	c3                   	ret    

Disassembly of section .plt:

0000000000400610 <__isoc99_fscanf@plt-0x10>:
  400610:	ff 35 f2 09 20 00    	push   QWORD PTR [rip+0x2009f2]        # 601008 <__gmon_start__@plt+0x200958>
  400616:	ff 25 f4 09 20 00    	jmp    QWORD PTR [rip+0x2009f4]        # 601010 <__gmon_start__@plt+0x200960>
  40061c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400620 <__isoc99_fscanf@plt>:
  400620:	ff 25 f2 09 20 00    	jmp    QWORD PTR [rip+0x2009f2]        # 601018 <__gmon_start__@plt+0x200968>
  400626:	68 00 00 00 00       	push   0x0
  40062b:	e9 e0 ff ff ff       	jmp    400610 <__isoc99_fscanf@plt-0x10>

0000000000400630 <puts@plt>:
  400630:	ff 25 ea 09 20 00    	jmp    QWORD PTR [rip+0x2009ea]        # 601020 <__gmon_start__@plt+0x200970>
  400636:	68 01 00 00 00       	push   0x1
  40063b:	e9 d0 ff ff ff       	jmp    400610 <__isoc99_fscanf@plt-0x10>

0000000000400640 <__libc_start_main@plt>:
  400640:	ff 25 e2 09 20 00    	jmp    QWORD PTR [rip+0x2009e2]        # 601028 <__gmon_start__@plt+0x200978>
  400646:	68 02 00 00 00       	push   0x2
  40064b:	e9 c0 ff ff ff       	jmp    400610 <__isoc99_fscanf@plt-0x10>

0000000000400650 <fgets@plt>:
  400650:	ff 25 da 09 20 00    	jmp    QWORD PTR [rip+0x2009da]        # 601030 <__gmon_start__@plt+0x200980>
  400656:	68 03 00 00 00       	push   0x3
  40065b:	e9 b0 ff ff ff       	jmp    400610 <__isoc99_fscanf@plt-0x10>

0000000000400660 <strcmp@plt>:
  400660:	ff 25 d2 09 20 00    	jmp    QWORD PTR [rip+0x2009d2]        # 601038 <__gmon_start__@plt+0x200988>
  400666:	68 04 00 00 00       	push   0x4
  40066b:	e9 a0 ff ff ff       	jmp    400610 <__isoc99_fscanf@plt-0x10>

0000000000400670 <malloc@plt>:
  400670:	ff 25 ca 09 20 00    	jmp    QWORD PTR [rip+0x2009ca]        # 601040 <__gmon_start__@plt+0x200990>
  400676:	68 05 00 00 00       	push   0x5
  40067b:	e9 90 ff ff ff       	jmp    400610 <__isoc99_fscanf@plt-0x10>

0000000000400680 <setvbuf@plt>:
  400680:	ff 25 c2 09 20 00    	jmp    QWORD PTR [rip+0x2009c2]        # 601048 <__gmon_start__@plt+0x200998>
  400686:	68 06 00 00 00       	push   0x6
  40068b:	e9 80 ff ff ff       	jmp    400610 <__isoc99_fscanf@plt-0x10>

0000000000400690 <fopen@plt>:
  400690:	ff 25 ba 09 20 00    	jmp    QWORD PTR [rip+0x2009ba]        # 601050 <__gmon_start__@plt+0x2009a0>
  400696:	68 07 00 00 00       	push   0x7
  40069b:	e9 70 ff ff ff       	jmp    400610 <__isoc99_fscanf@plt-0x10>

00000000004006a0 <exit@plt>:
  4006a0:	ff 25 b2 09 20 00    	jmp    QWORD PTR [rip+0x2009b2]        # 601058 <__gmon_start__@plt+0x2009a8>
  4006a6:	68 08 00 00 00       	push   0x8
  4006ab:	e9 60 ff ff ff       	jmp    400610 <__isoc99_fscanf@plt-0x10>

Disassembly of section .plt.got:

00000000004006b0 <__gmon_start__@plt>:
  4006b0:	ff 25 42 09 20 00    	jmp    QWORD PTR [rip+0x200942]        # 600ff8 <__gmon_start__@plt+0x200948>
  4006b6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000004006c0 <.text>:
  4006c0:	31 ed                	xor    ebp,ebp
  4006c2:	49 89 d1             	mov    r9,rdx
  4006c5:	5e                   	pop    rsi
  4006c6:	48 89 e2             	mov    rdx,rsp
  4006c9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  4006cd:	50                   	push   rax
  4006ce:	54                   	push   rsp
  4006cf:	49 c7 c0 30 09 40 00 	mov    r8,0x400930
  4006d6:	48 c7 c1 c0 08 40 00 	mov    rcx,0x4008c0
  4006dd:	48 c7 c7 59 08 40 00 	mov    rdi,0x400859
  4006e4:	e8 57 ff ff ff       	call   400640 <__libc_start_main@plt>
  4006e9:	f4                   	hlt    
  4006ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
  4006f0:	b8 77 10 60 00       	mov    eax,0x601077
  4006f5:	55                   	push   rbp
  4006f6:	48 2d 70 10 60 00    	sub    rax,0x601070
  4006fc:	48 83 f8 0e          	cmp    rax,0xe
  400700:	48 89 e5             	mov    rbp,rsp
  400703:	76 1b                	jbe    400720 <__gmon_start__@plt+0x70>
  400705:	b8 00 00 00 00       	mov    eax,0x0
  40070a:	48 85 c0             	test   rax,rax
  40070d:	74 11                	je     400720 <__gmon_start__@plt+0x70>
  40070f:	5d                   	pop    rbp
  400710:	bf 70 10 60 00       	mov    edi,0x601070
  400715:	ff e0                	jmp    rax
  400717:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  40071e:	00 00 
  400720:	5d                   	pop    rbp
  400721:	c3                   	ret    
  400722:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  400726:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  40072d:	00 00 00 
  400730:	be 70 10 60 00       	mov    esi,0x601070
  400735:	55                   	push   rbp
  400736:	48 81 ee 70 10 60 00 	sub    rsi,0x601070
  40073d:	48 c1 fe 03          	sar    rsi,0x3
  400741:	48 89 e5             	mov    rbp,rsp
  400744:	48 89 f0             	mov    rax,rsi
  400747:	48 c1 e8 3f          	shr    rax,0x3f
  40074b:	48 01 c6             	add    rsi,rax
  40074e:	48 d1 fe             	sar    rsi,1
  400751:	74 15                	je     400768 <__gmon_start__@plt+0xb8>
  400753:	b8 00 00 00 00       	mov    eax,0x0
  400758:	48 85 c0             	test   rax,rax
  40075b:	74 0b                	je     400768 <__gmon_start__@plt+0xb8>
  40075d:	5d                   	pop    rbp
  40075e:	bf 70 10 60 00       	mov    edi,0x601070
  400763:	ff e0                	jmp    rax
  400765:	0f 1f 00             	nop    DWORD PTR [rax]
  400768:	5d                   	pop    rbp
  400769:	c3                   	ret    
  40076a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
  400770:	80 3d 11 09 20 00 00 	cmp    BYTE PTR [rip+0x200911],0x0        # 601088 <stdin@GLIBC_2.2.5+0x8>
  400777:	75 11                	jne    40078a <__gmon_start__@plt+0xda>
  400779:	55                   	push   rbp
  40077a:	48 89 e5             	mov    rbp,rsp
  40077d:	e8 6e ff ff ff       	call   4006f0 <__gmon_start__@plt+0x40>
  400782:	5d                   	pop    rbp
  400783:	c6 05 fe 08 20 00 01 	mov    BYTE PTR [rip+0x2008fe],0x1        # 601088 <stdin@GLIBC_2.2.5+0x8>
  40078a:	f3 c3                	repz ret 
  40078c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  400790:	bf 20 0e 60 00       	mov    edi,0x600e20
  400795:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
  400799:	75 05                	jne    4007a0 <__gmon_start__@plt+0xf0>
  40079b:	eb 93                	jmp    400730 <__gmon_start__@plt+0x80>
  40079d:	0f 1f 00             	nop    DWORD PTR [rax]
  4007a0:	b8 00 00 00 00       	mov    eax,0x0
  4007a5:	48 85 c0             	test   rax,rax
  4007a8:	74 f1                	je     40079b <__gmon_start__@plt+0xeb>
  4007aa:	55                   	push   rbp
  4007ab:	48 89 e5             	mov    rbp,rsp
  4007ae:	ff d0                	call   rax
  4007b0:	5d                   	pop    rbp
  4007b1:	e9 7a ff ff ff       	jmp    400730 <__gmon_start__@plt+0x80>
  4007b6:	55                   	push   rbp
  4007b7:	48 89 e5             	mov    rbp,rsp
  4007ba:	48 83 ec 20          	sub    rsp,0x20
  4007be:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  4007c2:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  4007c6:	be 44 09 40 00       	mov    esi,0x400944
  4007cb:	bf 46 09 40 00       	mov    edi,0x400946
  4007d0:	e8 bb fe ff ff       	call   400690 <fopen@plt>
  4007d5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  4007d9:	bf 28 00 00 00       	mov    edi,0x28
  4007de:	e8 8d fe ff ff       	call   400670 <malloc@plt>
  4007e3:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  4007e7:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  4007eb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4007ef:	be 4f 09 40 00       	mov    esi,0x40094f
  4007f4:	48 89 c7             	mov    rdi,rax
  4007f7:	b8 00 00 00 00       	mov    eax,0x0
  4007fc:	e8 1f fe ff ff       	call   400620 <__isoc99_fscanf@plt>
  400801:	48 83 7d e8 01       	cmp    QWORD PTR [rbp-0x18],0x1
  400806:	75 2b                	jne    400833 <__gmon_start__@plt+0x183>
  400808:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  40080c:	be 52 09 40 00       	mov    esi,0x400952
  400811:	48 89 c7             	mov    rdi,rax
  400814:	e8 47 fe ff ff       	call   400660 <strcmp@plt>
  400819:	85 c0                	test   eax,eax
  40081b:	75 16                	jne    400833 <__gmon_start__@plt+0x183>
  40081d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  400821:	48 89 c7             	mov    rdi,rax
  400824:	e8 07 fe ff ff       	call   400630 <puts@plt>
  400829:	bf 00 00 00 00       	mov    edi,0x0
  40082e:	e8 6d fe ff ff       	call   4006a0 <exit@plt>
  400833:	90                   	nop
  400834:	c9                   	leave  
  400835:	c3                   	ret    
  400836:	55                   	push   rbp
  400837:	48 89 e5             	mov    rbp,rsp
  40083a:	48 83 ec 10          	sub    rsp,0x10
  40083e:	48 8b 15 3b 08 20 00 	mov    rdx,QWORD PTR [rip+0x20083b]        # 601080 <stdin@GLIBC_2.2.5>
  400845:	48 8d 45 ff          	lea    rax,[rbp-0x1]
  400849:	be 3c 00 00 00       	mov    esi,0x3c
  40084e:	48 89 c7             	mov    rdi,rax
  400851:	e8 fa fd ff ff       	call   400650 <fgets@plt>
  400856:	90                   	nop
  400857:	c9                   	leave  
  400858:	c3                   	ret    
  400859:	55                   	push   rbp
  40085a:	48 89 e5             	mov    rbp,rsp
  40085d:	48 8b 05 1c 08 20 00 	mov    rax,QWORD PTR [rip+0x20081c]        # 601080 <stdin@GLIBC_2.2.5>
  400864:	b9 00 00 00 00       	mov    ecx,0x0
  400869:	ba 02 00 00 00       	mov    edx,0x2
  40086e:	be 00 00 00 00       	mov    esi,0x0
  400873:	48 89 c7             	mov    rdi,rax
  400876:	e8 05 fe ff ff       	call   400680 <setvbuf@plt>
  40087b:	48 8b 05 ee 07 20 00 	mov    rax,QWORD PTR [rip+0x2007ee]        # 601070 <stdout@GLIBC_2.2.5>
  400882:	b9 00 00 00 00       	mov    ecx,0x0
  400887:	ba 02 00 00 00       	mov    edx,0x2
  40088c:	be 00 00 00 00       	mov    esi,0x0
  400891:	48 89 c7             	mov    rdi,rax
  400894:	e8 e7 fd ff ff       	call   400680 <setvbuf@plt>
  400899:	bf 5d 09 40 00       	mov    edi,0x40095d
  40089e:	e8 8d fd ff ff       	call   400630 <puts@plt>
  4008a3:	b8 00 00 00 00       	mov    eax,0x0
  4008a8:	e8 89 ff ff ff       	call   400836 <__gmon_start__@plt+0x186>
  4008ad:	b8 00 00 00 00       	mov    eax,0x0
  4008b2:	5d                   	pop    rbp
  4008b3:	c3                   	ret    
  4008b4:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  4008bb:	00 00 00 
  4008be:	66 90                	xchg   ax,ax
  4008c0:	41 57                	push   r15
  4008c2:	41 56                	push   r14
  4008c4:	41 89 ff             	mov    r15d,edi
  4008c7:	41 55                	push   r13
  4008c9:	41 54                	push   r12
  4008cb:	4c 8d 25 3e 05 20 00 	lea    r12,[rip+0x20053e]        # 600e10 <__gmon_start__@plt+0x200760>
  4008d2:	55                   	push   rbp
  4008d3:	48 8d 2d 3e 05 20 00 	lea    rbp,[rip+0x20053e]        # 600e18 <__gmon_start__@plt+0x200768>
  4008da:	53                   	push   rbx
  4008db:	49 89 f6             	mov    r14,rsi
  4008de:	49 89 d5             	mov    r13,rdx
  4008e1:	4c 29 e5             	sub    rbp,r12
  4008e4:	48 83 ec 08          	sub    rsp,0x8
  4008e8:	48 c1 fd 03          	sar    rbp,0x3
  4008ec:	e8 ff fc ff ff       	call   4005f0 <__isoc99_fscanf@plt-0x30>
  4008f1:	48 85 ed             	test   rbp,rbp
  4008f4:	74 20                	je     400916 <__gmon_start__@plt+0x266>
  4008f6:	31 db                	xor    ebx,ebx
  4008f8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  4008ff:	00 
  400900:	4c 89 ea             	mov    rdx,r13
  400903:	4c 89 f6             	mov    rsi,r14
  400906:	44 89 ff             	mov    edi,r15d
  400909:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40090d:	48 83 c3 01          	add    rbx,0x1
  400911:	48 39 eb             	cmp    rbx,rbp
  400914:	75 ea                	jne    400900 <__gmon_start__@plt+0x250>
  400916:	48 83 c4 08          	add    rsp,0x8
  40091a:	5b                   	pop    rbx
  40091b:	5d                   	pop    rbp
  40091c:	41 5c                	pop    r12
  40091e:	41 5d                	pop    r13
  400920:	41 5e                	pop    r14
  400922:	41 5f                	pop    r15
  400924:	c3                   	ret    
  400925:	90                   	nop
  400926:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  40092d:	00 00 00 
  400930:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000400934 <.fini>:
  400934:	48 83 ec 08          	sub    rsp,0x8
  400938:	48 83 c4 08          	add    rsp,0x8
  40093c:	c3                   	ret    

Disassembly of section .rodata:

0000000000400940 <.rodata>:
  400940:	01 00                	add    DWORD PTR [rax],eax
  400942:	02 00                	add    al,BYTE PTR [rax]
  400944:	72 00                	jb     400946 <__gmon_start__@plt+0x296>
  400946:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
  400948:	61                   	(bad)  
  400949:	67 2e 74 78          	addr32 cs je 4009c5 <__gmon_start__@plt+0x315>
  40094d:	74 00                	je     40094f <__gmon_start__@plt+0x29f>
  40094f:	25 73 00 48 65       	and    eax,0x65480073
  400954:	77 68                	ja     4009be <__gmon_start__@plt+0x30e>
  400956:	65 77 62             	gs ja  4009bb <__gmon_start__@plt+0x30b>
  400959:	72 65                	jb     4009c0 <__gmon_start__@plt+0x310>
  40095b:	77 00                	ja     40095d <__gmon_start__@plt+0x2ad>
  40095d:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
  40095f:	74 65                	je     4009c6 <__gmon_start__@plt+0x316>
  400961:	72 20                	jb     400983 <__gmon_start__@plt+0x2d3>
  400963:	69                   	.byte 0x69
  400964:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400965:	70 75                	jo     4009dc <__gmon_start__@plt+0x32c>
  400967:	74 00                	je     400969 <__gmon_start__@plt+0x2b9>

Disassembly of section .eh_frame_hdr:

000000000040096c <.eh_frame_hdr>:
  40096c:	01 1b                	add    DWORD PTR [rbx],ebx
  40096e:	03 3b                	add    edi,DWORD PTR [rbx]
  400970:	40 00 00             	rex add BYTE PTR [rax],al
  400973:	00 07                	add    BYTE PTR [rdi],al
  400975:	00 00                	add    BYTE PTR [rax],al
  400977:	00 a4 fc ff ff 8c 00 	add    BYTE PTR [rsp+rdi*8+0x8cffff],ah
  40097e:	00 00                	add    BYTE PTR [rax],al
  400980:	54                   	push   rsp
  400981:	fd                   	std    
  400982:	ff                   	(bad)  
  400983:	ff 5c 00 00          	call   FWORD PTR [rax+rax*1+0x0]
  400987:	00 4a fe             	add    BYTE PTR [rdx-0x2],cl
  40098a:	ff                   	(bad)  
  40098b:	ff b4 00 00 00 ca fe 	push   QWORD PTR [rax+rax*1-0x1360000]
  400992:	ff                   	(bad)  
  400993:	ff d4                	call   rsp
  400995:	00 00                	add    BYTE PTR [rax],al
  400997:	00 ed                	add    ch,ch
  400999:	fe                   	(bad)  
  40099a:	ff                   	(bad)  
  40099b:	ff f4                	push   rsp
  40099d:	00 00                	add    BYTE PTR [rax],al
  40099f:	00 54 ff ff          	add    BYTE PTR [rdi+rdi*8-0x1],dl
  4009a3:	ff 14 01             	call   QWORD PTR [rcx+rax*1]
  4009a6:	00 00                	add    BYTE PTR [rax],al
  4009a8:	c4                   	(bad)  
  4009a9:	ff                   	(bad)  
  4009aa:	ff                   	(bad)  
  4009ab:	ff 5c 01 00          	call   FWORD PTR [rcx+rax*1+0x0]
	...

Disassembly of section .eh_frame:

00000000004009b0 <.eh_frame>:
  4009b0:	14 00                	adc    al,0x0
  4009b2:	00 00                	add    BYTE PTR [rax],al
  4009b4:	00 00                	add    BYTE PTR [rax],al
  4009b6:	00 00                	add    BYTE PTR [rax],al
  4009b8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  4009bb:	00 01                	add    BYTE PTR [rcx],al
  4009bd:	78 10                	js     4009cf <__gmon_start__@plt+0x31f>
  4009bf:	01 1b                	add    DWORD PTR [rbx],ebx
  4009c1:	0c 07                	or     al,0x7
  4009c3:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
  4009c9:	00 00                	add    BYTE PTR [rax],al
  4009cb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4009ce:	00 00                	add    BYTE PTR [rax],al
  4009d0:	f0 fc                	lock cld 
  4009d2:	ff                   	(bad)  
  4009d3:	ff 2a                	jmp    FWORD PTR [rdx]
	...
  4009dd:	00 00                	add    BYTE PTR [rax],al
  4009df:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  4009e2:	00 00                	add    BYTE PTR [rax],al
  4009e4:	00 00                	add    BYTE PTR [rax],al
  4009e6:	00 00                	add    BYTE PTR [rax],al
  4009e8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  4009eb:	00 01                	add    BYTE PTR [rcx],al
  4009ed:	78 10                	js     4009ff <__gmon_start__@plt+0x34f>
  4009ef:	01 1b                	add    DWORD PTR [rbx],ebx
  4009f1:	0c 07                	or     al,0x7
  4009f3:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  4009f9:	00 00                	add    BYTE PTR [rax],al
  4009fb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4009fe:	00 00                	add    BYTE PTR [rax],al
  400a00:	10 fc                	adc    ah,bh
  400a02:	ff                   	(bad)  
  400a03:	ff a0 00 00 00 00    	jmp    QWORD PTR [rax+0x0]
  400a09:	0e                   	(bad)  
  400a0a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  400a0d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  400a10:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  400a13:	80 00 3f             	add    BYTE PTR [rax],0x3f
  400a16:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  400a18:	2a 33                	sub    dh,BYTE PTR [rbx]
  400a1a:	24 22                	and    al,0x22
  400a1c:	00 00                	add    BYTE PTR [rax],al
  400a1e:	00 00                	add    BYTE PTR [rax],al
  400a20:	1c 00                	sbb    al,0x0
  400a22:	00 00                	add    BYTE PTR [rax],al
  400a24:	44 00 00             	add    BYTE PTR [rax],r8b
  400a27:	00 8e fd ff ff 80    	add    BYTE PTR [rsi-0x7f000003],cl
  400a2d:	00 00                	add    BYTE PTR [rax],al
  400a2f:	00 00                	add    BYTE PTR [rax],al
  400a31:	41 0e                	rex.B (bad) 
  400a33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400a39:	02 7b 0c             	add    bh,BYTE PTR [rbx+0xc]
  400a3c:	07                   	(bad)  
  400a3d:	08 00                	or     BYTE PTR [rax],al
  400a3f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400a42:	00 00                	add    BYTE PTR [rax],al
  400a44:	64 00 00             	add    BYTE PTR fs:[rax],al
  400a47:	00 ee                	add    dh,ch
  400a49:	fd                   	std    
  400a4a:	ff                   	(bad)  
  400a4b:	ff 23                	jmp    QWORD PTR [rbx]
  400a4d:	00 00                	add    BYTE PTR [rax],al
  400a4f:	00 00                	add    BYTE PTR [rax],al
  400a51:	41 0e                	rex.B (bad) 
  400a53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400a59:	5e                   	pop    rsi
  400a5a:	0c 07                	or     al,0x7
  400a5c:	08 00                	or     BYTE PTR [rax],al
  400a5e:	00 00                	add    BYTE PTR [rax],al
  400a60:	1c 00                	sbb    al,0x0
  400a62:	00 00                	add    BYTE PTR [rax],al
  400a64:	84 00                	test   BYTE PTR [rax],al
  400a66:	00 00                	add    BYTE PTR [rax],al
  400a68:	f1                   	int1   
  400a69:	fd                   	std    
  400a6a:	ff                   	(bad)  
  400a6b:	ff 5b 00             	call   FWORD PTR [rbx+0x0]
  400a6e:	00 00                	add    BYTE PTR [rax],al
  400a70:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  400a73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400a79:	02 56 0c             	add    dl,BYTE PTR [rsi+0xc]
  400a7c:	07                   	(bad)  
  400a7d:	08 00                	or     BYTE PTR [rax],al
  400a7f:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
  400a83:	00 a4 00 00 00 38 fe 	add    BYTE PTR [rax+rax*1-0x1c80000],ah
  400a8a:	ff                   	(bad)  
  400a8b:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  400a8e:	00 00                	add    BYTE PTR [rax],al
  400a90:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  400a93:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
  400a99:	8e 03                	mov    es,WORD PTR [rbx]
  400a9b:	45 0e                	rex.RB (bad) 
  400a9d:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
  400aa3:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff867018f1 <stdin@GLIBC_2.2.5+0xffffffff86100871>
  400aa9:	06                   	(bad)  
  400aaa:	48 0e                	rex.W (bad) 
  400aac:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  400ab2:	72 0e                	jb     400ac2 <__gmon_start__@plt+0x412>
  400ab4:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  400ab7:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  400aba:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  400abd:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  400ac0:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  400ac3:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  400ac6:	08 00                	or     BYTE PTR [rax],al
  400ac8:	14 00                	adc    al,0x0
  400aca:	00 00                	add    BYTE PTR [rax],al
  400acc:	ec                   	in     al,dx
  400acd:	00 00                	add    BYTE PTR [rax],al
  400acf:	00 60 fe             	add    BYTE PTR [rax-0x2],ah
  400ad2:	ff                   	(bad)  
  400ad3:	ff 02                	inc    DWORD PTR [rdx]
	...

Disassembly of section .init_array:

0000000000600e10 <.init_array>:
  600e10:	90                   	nop
  600e11:	07                   	(bad)  
  600e12:	40 00 00             	rex add BYTE PTR [rax],al
  600e15:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000600e18 <.fini_array>:
  600e18:	70 07                	jo     600e21 <__gmon_start__@plt+0x200771>
  600e1a:	40 00 00             	rex add BYTE PTR [rax],al
  600e1d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .jcr:

0000000000600e20 <.jcr>:
	...

Disassembly of section .dynamic:

0000000000600e28 <.dynamic>:
  600e28:	01 00                	add    DWORD PTR [rax],eax
  600e2a:	00 00                	add    BYTE PTR [rax],al
  600e2c:	00 00                	add    BYTE PTR [rax],al
  600e2e:	00 00                	add    BYTE PTR [rax],al
  600e30:	01 00                	add    DWORD PTR [rax],eax
  600e32:	00 00                	add    BYTE PTR [rax],al
  600e34:	00 00                	add    BYTE PTR [rax],al
  600e36:	00 00                	add    BYTE PTR [rax],al
  600e38:	0c 00                	or     al,0x0
  600e3a:	00 00                	add    BYTE PTR [rax],al
  600e3c:	00 00                	add    BYTE PTR [rax],al
  600e3e:	00 00                	add    BYTE PTR [rax],al
  600e40:	f0 05 40 00 00 00    	lock add eax,0x40
  600e46:	00 00                	add    BYTE PTR [rax],al
  600e48:	0d 00 00 00 00       	or     eax,0x0
  600e4d:	00 00                	add    BYTE PTR [rax],al
  600e4f:	00 34 09             	add    BYTE PTR [rcx+rcx*1],dh
  600e52:	40 00 00             	rex add BYTE PTR [rax],al
  600e55:	00 00                	add    BYTE PTR [rax],al
  600e57:	00 19                	add    BYTE PTR [rcx],bl
  600e59:	00 00                	add    BYTE PTR [rax],al
  600e5b:	00 00                	add    BYTE PTR [rax],al
  600e5d:	00 00                	add    BYTE PTR [rax],al
  600e5f:	00 10                	add    BYTE PTR [rax],dl
  600e61:	0e                   	(bad)  
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    BYTE PTR [rax],al
  600e65:	00 00                	add    BYTE PTR [rax],al
  600e67:	00 1b                	add    BYTE PTR [rbx],bl
  600e69:	00 00                	add    BYTE PTR [rax],al
  600e6b:	00 00                	add    BYTE PTR [rax],al
  600e6d:	00 00                	add    BYTE PTR [rax],al
  600e6f:	00 08                	add    BYTE PTR [rax],cl
  600e71:	00 00                	add    BYTE PTR [rax],al
  600e73:	00 00                	add    BYTE PTR [rax],al
  600e75:	00 00                	add    BYTE PTR [rax],al
  600e77:	00 1a                	add    BYTE PTR [rdx],bl
  600e79:	00 00                	add    BYTE PTR [rax],al
  600e7b:	00 00                	add    BYTE PTR [rax],al
  600e7d:	00 00                	add    BYTE PTR [rax],al
  600e7f:	00 18                	add    BYTE PTR [rax],bl
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    BYTE PTR [rax],al
  600e85:	00 00                	add    BYTE PTR [rax],al
  600e87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  600e8a:	00 00                	add    BYTE PTR [rax],al
  600e8c:	00 00                	add    BYTE PTR [rax],al
  600e8e:	00 00                	add    BYTE PTR [rax],al
  600e90:	08 00                	or     BYTE PTR [rax],al
  600e92:	00 00                	add    BYTE PTR [rax],al
  600e94:	00 00                	add    BYTE PTR [rax],al
  600e96:	00 00                	add    BYTE PTR [rax],al
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600e9d:	00 00                	add    BYTE PTR [rax],al
  600e9f:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  600ea5:	00 00                	add    BYTE PTR [rax],al
  600ea7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 600ead <__gmon_start__@plt+0x2007fd>
  600ead:	00 00                	add    BYTE PTR [rax],al
  600eaf:	00 f8                	add    al,bh
  600eb1:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  600eb4:	00 00                	add    BYTE PTR [rax],al
  600eb6:	00 00                	add    BYTE PTR [rax],al
  600eb8:	06                   	(bad)  
  600eb9:	00 00                	add    BYTE PTR [rax],al
  600ebb:	00 00                	add    BYTE PTR [rax],al
  600ebd:	00 00                	add    BYTE PTR [rax],al
  600ebf:	00 c0                	add    al,al
  600ec1:	02 40 00             	add    al,BYTE PTR [rax+0x0]
  600ec4:	00 00                	add    BYTE PTR [rax],al
  600ec6:	00 00                	add    BYTE PTR [rax],al
  600ec8:	0a 00                	or     al,BYTE PTR [rax]
  600eca:	00 00                	add    BYTE PTR [rax],al
  600ecc:	00 00                	add    BYTE PTR [rax],al
  600ece:	00 00                	add    BYTE PTR [rax],al
  600ed0:	8b 00                	mov    eax,DWORD PTR [rax]
  600ed2:	00 00                	add    BYTE PTR [rax],al
  600ed4:	00 00                	add    BYTE PTR [rax],al
  600ed6:	00 00                	add    BYTE PTR [rax],al
  600ed8:	0b 00                	or     eax,DWORD PTR [rax]
  600eda:	00 00                	add    BYTE PTR [rax],al
  600edc:	00 00                	add    BYTE PTR [rax],al
  600ede:	00 00                	add    BYTE PTR [rax],al
  600ee0:	18 00                	sbb    BYTE PTR [rax],al
  600ee2:	00 00                	add    BYTE PTR [rax],al
  600ee4:	00 00                	add    BYTE PTR [rax],al
  600ee6:	00 00                	add    BYTE PTR [rax],al
  600ee8:	15 00 00 00 00       	adc    eax,0x0
	...
  600ef5:	00 00                	add    BYTE PTR [rax],al
  600ef7:	00 03                	add    BYTE PTR [rbx],al
	...
  600f01:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  600f04:	00 00                	add    BYTE PTR [rax],al
  600f06:	00 00                	add    BYTE PTR [rax],al
  600f08:	02 00                	add    al,BYTE PTR [rax]
  600f0a:	00 00                	add    BYTE PTR [rax],al
  600f0c:	00 00                	add    BYTE PTR [rax],al
  600f0e:	00 00                	add    BYTE PTR [rax],al
  600f10:	d8 00                	fadd   DWORD PTR [rax]
  600f12:	00 00                	add    BYTE PTR [rax],al
  600f14:	00 00                	add    BYTE PTR [rax],al
  600f16:	00 00                	add    BYTE PTR [rax],al
  600f18:	14 00                	adc    al,0x0
  600f1a:	00 00                	add    BYTE PTR [rax],al
  600f1c:	00 00                	add    BYTE PTR [rax],al
  600f1e:	00 00                	add    BYTE PTR [rax],al
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    BYTE PTR [rax],al
  600f23:	00 00                	add    BYTE PTR [rax],al
  600f25:	00 00                	add    BYTE PTR [rax],al
  600f27:	00 17                	add    BYTE PTR [rdi],dl
  600f29:	00 00                	add    BYTE PTR [rax],al
  600f2b:	00 00                	add    BYTE PTR [rax],al
  600f2d:	00 00                	add    BYTE PTR [rax],al
  600f2f:	00 18                	add    BYTE PTR [rax],bl
  600f31:	05 40 00 00 00       	add    eax,0x40
  600f36:	00 00                	add    BYTE PTR [rax],al
  600f38:	07                   	(bad)  
  600f39:	00 00                	add    BYTE PTR [rax],al
  600f3b:	00 00                	add    BYTE PTR [rax],al
  600f3d:	00 00                	add    BYTE PTR [rax],al
  600f3f:	00 d0                	add    al,dl
  600f41:	04 40                	add    al,0x40
  600f43:	00 00                	add    BYTE PTR [rax],al
  600f45:	00 00                	add    BYTE PTR [rax],al
  600f47:	00 08                	add    BYTE PTR [rax],cl
  600f49:	00 00                	add    BYTE PTR [rax],al
  600f4b:	00 00                	add    BYTE PTR [rax],al
  600f4d:	00 00                	add    BYTE PTR [rax],al
  600f4f:	00 48 00             	add    BYTE PTR [rax+0x0],cl
  600f52:	00 00                	add    BYTE PTR [rax],al
  600f54:	00 00                	add    BYTE PTR [rax],al
  600f56:	00 00                	add    BYTE PTR [rax],al
  600f58:	09 00                	or     DWORD PTR [rax],eax
  600f5a:	00 00                	add    BYTE PTR [rax],al
  600f5c:	00 00                	add    BYTE PTR [rax],al
  600f5e:	00 00                	add    BYTE PTR [rax],al
  600f60:	18 00                	sbb    BYTE PTR [rax],al
  600f62:	00 00                	add    BYTE PTR [rax],al
  600f64:	00 00                	add    BYTE PTR [rax],al
  600f66:	00 00                	add    BYTE PTR [rax],al
  600f68:	fe                   	(bad)  
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f6d:	00 00                	add    BYTE PTR [rax],al
  600f6f:	00 a0 04 40 00 00    	add    BYTE PTR [rax+0x4004],ah
  600f75:	00 00                	add    BYTE PTR [rax],al
  600f77:	00 ff                	add    bh,bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f7d:	00 00                	add    BYTE PTR [rax],al
  600f7f:	00 01                	add    BYTE PTR [rcx],al
  600f81:	00 00                	add    BYTE PTR [rax],al
  600f83:	00 00                	add    BYTE PTR [rax],al
  600f85:	00 00                	add    BYTE PTR [rax],al
  600f87:	00 f0                	add    al,dh
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f8d:	00 00                	add    BYTE PTR [rax],al
  600f8f:	00 84 04 40 00 00 00 	add    BYTE PTR [rsp+rax*1+0x40],al
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <.got.plt>:
  601000:	28 0e                	sub    BYTE PTR [rsi],cl
  601002:	60                   	(bad)  
	...
  601017:	00 26                	add    BYTE PTR [rsi],ah
  601019:	06                   	(bad)  
  60101a:	40 00 00             	rex add BYTE PTR [rax],al
  60101d:	00 00                	add    BYTE PTR [rax],al
  60101f:	00 36                	add    BYTE PTR [rsi],dh
  601021:	06                   	(bad)  
  601022:	40 00 00             	rex add BYTE PTR [rax],al
  601025:	00 00                	add    BYTE PTR [rax],al
  601027:	00 46 06             	add    BYTE PTR [rsi+0x6],al
  60102a:	40 00 00             	rex add BYTE PTR [rax],al
  60102d:	00 00                	add    BYTE PTR [rax],al
  60102f:	00 56 06             	add    BYTE PTR [rsi+0x6],dl
  601032:	40 00 00             	rex add BYTE PTR [rax],al
  601035:	00 00                	add    BYTE PTR [rax],al
  601037:	00 66 06             	add    BYTE PTR [rsi+0x6],ah
  60103a:	40 00 00             	rex add BYTE PTR [rax],al
  60103d:	00 00                	add    BYTE PTR [rax],al
  60103f:	00 76 06             	add    BYTE PTR [rsi+0x6],dh
  601042:	40 00 00             	rex add BYTE PTR [rax],al
  601045:	00 00                	add    BYTE PTR [rax],al
  601047:	00 86 06 40 00 00    	add    BYTE PTR [rsi+0x4006],al
  60104d:	00 00                	add    BYTE PTR [rax],al
  60104f:	00 96 06 40 00 00    	add    BYTE PTR [rsi+0x4006],dl
  601055:	00 00                	add    BYTE PTR [rax],al
  601057:	00 a6 06 40 00 00    	add    BYTE PTR [rsi+0x4006],ah
  60105d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000601060 <.data>:
	...

Disassembly of section .bss:

0000000000601070 <stdout@GLIBC_2.2.5>:
	...

0000000000601080 <stdin@GLIBC_2.2.5>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <__isoc99_fscanf@plt-0x4005a8>
   a:	74 75                	je     81 <__isoc99_fscanf@plt-0x40059f>
   c:	20 35 2e 34 2e 30    	and    BYTE PTR [rip+0x302e342e],dh        # 302e3440 <stdin@GLIBC_2.2.5+0x2fce23c0>
  12:	2d 36 75 62 75       	sub    eax,0x75627536
  17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  18:	74 75                	je     8f <__isoc99_fscanf@plt-0x400591>
  1a:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1d:	36 2e 30 34 2e       	ss cs xor BYTE PTR [rsi+rbp*1],dh
  22:	31 31                	xor    DWORD PTR [rcx],esi
  24:	29 20                	sub    DWORD PTR [rax],esp
  26:	35 2e 34 2e 30       	xor    eax,0x302e342e
  2b:	20 32                	and    BYTE PTR [rdx],dh
  2d:	30 31                	xor    BYTE PTR [rcx],dh
  2f:	36 30 36             	ss xor BYTE PTR [rsi],dh
  32:	30 39                	xor    BYTE PTR [rcx],bh
	...
